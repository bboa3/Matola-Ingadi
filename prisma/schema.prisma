// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model accessories {
  id                 String               @id @default(uuid())
  type               String               @unique
  description        String
  created_at         DateTime             @default(now())
  updated_at         DateTime             @default(now())
  accessories_photos accessories_photos[]
}

model accessories_photos {
  id           Int         @id @default(autoincrement())
  path         String
  accessory_id String
  accessories  accessories @relation(fields: [accessory_id], references: [id], onDelete: Cascade)
}

model event_histories {
  id            Int             @id @default(autoincrement())
  title         String
  description   String
  created_at    DateTime        @default(now())
  updated_at    DateTime        @default(now())
  eventsId      String
  events        events          @relation(fields: [eventsId], references: [id], onDelete: Cascade)
  events_photos events_photos[]
}

model events {
  id              String            @id @default(uuid())
  type            String            @unique
  created_at      DateTime          @default(now())
  updated_at      DateTime          @default(now())
  event_histories event_histories[]
  user_events     user_events[]
}

model events_photos {
  id               Int             @id @default(autoincrement())
  path             String
  event_history_id Int
  event_histories  event_histories @relation(fields: [event_history_id], references: [id], onDelete: Cascade)
}

model user_events {
  id            String   @id @default(uuid())
  date_of_event DateTime
  userId        String
  eventId       String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  events        events   @relation(fields: [eventId], references: [id])
  users         users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model users {
  id            String        @id @default(uuid())
  name          String?
  email         String        @unique
  phone_number  String?
  created_at    DateTime      @default(now())
  updated_at    DateTime      @default(now())
  user_events   user_events[]
}

model super_users {
  id            String        @id @default(uuid())
  name          String
  email         String        @unique
  password      String
  phone_number  String
  token_version Int           @default(0)
  created_at    DateTime      @default(now())
  updated_at    DateTime      @default(now())
}
